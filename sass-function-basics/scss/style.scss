// 함수
// @function 함수이름(){... 처리로직}
// 함수이름은 $로 시작하는 것이 아니고 그 외에는 변수이름 규칙과 같다.

$red : #d8222b;

@function xxx(){
    // 함수 처리 로직...
    // 코드들...
    @return #ff0000;
}

@function fn1($p1, $p2){
    $var : 10px; // 지역변수
    @return $var + $p1 + $p2;
}


.box{
    width:100px;
    height:100px;
    border:fn1(10px, 20px) solid #000;
    // background:xxx(); // 함수의 실행은 결국 "값!!!"
    // background:rgba(#000fff, .5); // scss 에서는 rgba 형식이 이렇게도 적용 된다. css에서는 안됨!
    $color:blue;
    // background:lighten($color, 10);
    // background:darken($color, 10);
}

.bg{width:500px;height:100px;color:#fff;font-size:14px;display:flex;align-items:center;justify-content:center}

.bg1{background-color:$red}
.bg2{background-color:darken($red, 30%)} // 색상을 어둡게 만들어 주는 함수
.bg3{background-color:lighten($red, 30%)} // 색상을 밝게 만들어주는 함수
.bg4{background-color:saturate($red, 30%)} // 채도를 올려주는 함수
.bg5{background-color:desaturate($red, 30%)} // 채도를 내려주는 함수
.bg6{background-color:adjust-hue($red, 30%)} // HSL의 색조 값을 변경한다
.bg7{background-color:rgba($red, .3)} // 투명도 조절
.bg8{background-color:grayscale($red)} // 채도를 제거하고 회색 계열의 색상으로 만들어줌
.bg9{background-color:invert($red)} // 색상을 반전시켜주는 함수
.bg10{background-color:mix($red, blue)}
